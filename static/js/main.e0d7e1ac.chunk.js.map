{"version":3,"sources":["components/HomePage/HomePage.tsx","api/people.ts","api/api.ts","hoc/PeopleProvider.tsx","components/PeoplePages/PersonName.tsx","components/PeoplePages/PersonRow.tsx","components/PeoplePages/PeopleTable.tsx","components/PeoplePages/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","components/Layout/Layout.tsx","components/PeoplePages/NewPerson.tsx","App.tsx","index.tsx"],"names":["HomePage","className","getPeople","fetch","then","response","ok","json","Promise","reject","Error","status","statusText","PeopleContext","React","createContext","people","setPeople","PeopleProvider","children","useState","loadPeople","a","peoples","useEffect","contextValue","useMemo","Provider","value","PersonName","person","search","useLocation","selector","slug","smooth","scrollOptions","block","to","pathname","sex","name","PersonRow","mother","father","useSearchParams","sortBy","get","useParams","classNames","born","died","motherName","fatherName","PeopleTable","useContext","searchParams","navigate","useNavigate","sortOrder","appliedQuery","query","setQuery","visiblePeople","filter","toLowerCase","includes","applyQuery","useCallback","debounce","newQuery","set","delete","toString","find","mam","dad","style","width","type","placeholder","onChange","event","target","map","col","onClick","param","replace","sort","fPer","sPer","localeCompare","id","PeoplePage","length","NotFoundPage","Layout","role","isActive","NewPerson","useForm","mode","register","handleSubmit","formState","errors","isValid","getValues","reset","values","currentYear","Date","getFullYear","getParent","gender","posibleMam","posibleDad","autoComplete","onSubmit","data","split","join","newPerson","required","minLength","maxLength","pattern","message","htmlFor","min","max","disabled","App","path","element","index","ReactDOM","render","document","getElementById"],"mappings":"iRAEaA,EAAqB,kBAChC,oBAAIC,UAAU,kCAAd,wB,+BCDWC,EAAY,WACvB,OCCOC,MAAM,GAAD,OAHS,sEAIlBC,MAAK,SAAAC,GACJ,OAAKA,EAASC,GAMPD,EAASE,OALPC,QAAQC,OACb,IAAIC,MAAJ,UAAaL,EAASM,OAAtB,cAAkCN,EAASO,kBCAxCC,EAAgBC,IAAMC,cAAuB,CACxDC,OAAQ,GACRC,UAAW,eAGAC,EAA2B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzC,EAA4BC,mBAAmB,IAA/C,mBAAOJ,EAAP,KAAeC,EAAf,KAEMI,EAAU,uCAAG,4BAAAC,EAAA,sEACKpB,IADL,OACXqB,EADW,OAGjBN,EAAUM,GAHO,2CAAH,qDAMhBC,qBAAU,WACRH,MACC,IAEH,IAAMI,EAAeC,mBAAQ,WAC3B,MAAO,CACLV,SACAC,eAED,CAACD,IAEJ,OACE,cAACH,EAAcc,SAAf,CAAwBC,MAAOH,EAA/B,SACGN,K,yCC5BMU,EAA8B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpCC,EAAWC,cAAXD,OAER,OACE,cAAC,IAAD,CACEE,SAAQ,WAAMH,EAAOI,MACrBC,QAAM,EACNC,cAAe,CACbC,MAAO,UAJX,SAOE,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,WAAD,OAAaT,EAAOI,MAC5BH,UAEF9B,UAA0B,MAAf6B,EAAOU,IAAc,gBAAkB,kBALpD,SAOGV,EAAOW,UCbHC,EAA6B,SAAC,GAAgC,IAA9BZ,EAA6B,EAA7BA,OAAQa,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OAE3D,EAAuBC,cACjBC,EADN,oBAC4BC,IAAI,WAAa,GAErCb,EAASc,cAATd,KAKR,OACE,qCACE,oBACEjC,UAAWgD,IAAW,CACpB,4BAAwC,SAAXH,EAC7B,8BAA+BhB,EAAOI,OAASA,IAHnD,SAME,cAAC,EAAD,CAAYJ,OAAQA,MAEtB,oBACE7B,UAAWgD,IAAW,CACpB,4BAAwC,QAAXH,EAC7B,8BAA+BhB,EAAOI,OAASA,IAHnD,SAMkB,MAAfJ,EAAOU,IAAc,SAAW,SAEnC,oBACEvC,UAAWgD,IAAW,CACpB,4BAAwC,SAAXH,EAC7B,8BAA+BhB,EAAOI,OAASA,IAHnD,SAMGJ,EAAOoB,OAEV,oBACEjD,UAAWgD,IAAW,CACpB,4BAAwC,SAAXH,EAC7B,8BAA+BhB,EAAOI,OAASA,IAHnD,SAMGJ,EAAOqB,OAEV,6BACGR,EAEG,cAAC,EAAD,CAAYb,OAAQa,IAGpBb,EAAOsB,YACJ,mBAAGnD,UAAU,YAAb,uBAGT,6BACG2C,EAEG,cAAC,EAAD,CAAYd,OAAQc,IAGpBd,EAAOuB,YACJ,mBAAGpD,UAAU,YAAb,2BCvDFqD,G,MAAwB,WACnC,IAAQtC,EAAWuC,qBAAW1C,GAAtBG,OACAkB,EAASc,cAATd,KACR,EAAuBW,cAAhBW,EAAP,oBACMC,EAAWC,cAEXZ,EAASU,EAAaT,IAAI,WAAa,GACvCY,EAAYH,EAAaT,IAAI,cAAgB,GAC7Ca,EAAeJ,EAAaT,IAAI,UAAY,GAElD,EAA0B3B,mBAASwC,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAWMC,EAAgBrC,mBARH,WACjB,OAAOV,EACHA,EAAOgD,QAAO,SAAAlC,GAAM,eAAIA,EAAOW,KAAKwB,cAAcC,SAASN,KAAnC,UACrB9B,EAAOsB,kBADc,aACrB,EAAmBa,cAAcC,SAASN,MADrB,UAErB9B,EAAOuB,kBAFc,aAErB,EAAmBY,cAAcC,SAASN,OAC7C,KAKJ,CAAC5C,EAAQ4C,IAGLO,EAAaC,sBACjBC,KAAS,SAACC,GACJA,EACFd,EAAae,IAAI,QAASD,EAASL,eAEnCT,EAAagB,OAAO,SAGtBf,EAAS,IAAD,OAAKD,EAAaiB,eACzB,KACH,IAwCI9B,EAAS,SAACb,GACd,OAAOiC,EAAcW,MAAK,SAAAC,GAAG,OAAIA,EAAIlC,OAASX,EAAOsB,eAAe,MAGhER,EAAS,SAACd,GACd,OAAOiC,EAAcW,MAAK,SAAAE,GAAG,OAAIA,EAAInC,OAASX,EAAOuB,eAAe,MAGtE,OACE,qCACE,sBAAKpD,UAAU,oDAAf,UACE,oBACEA,UAAU,yBACV4E,MAAO,CAAEC,MAAO,OAFlB,UAIE,uBACEC,KAAK,SACLnD,MAAOiC,EACPmB,YAAY,yBACZ/E,UAAU,QACVgF,SAzDgB,SAACC,GACzBpB,EAASoB,EAAMC,OAAOvD,OACtBuC,EAAWe,EAAMC,OAAOvD,QAwDhBiD,MAAO,CAAEC,MAAO,UAElB,sBAAM7E,UAAU,wBAAhB,SACE,mBAAGA,UAAU,uBAIjB,qBAAKA,UAAU,UAAf,SACE,cAAC,IAAD,CACEqC,GAAG,cACHrC,UAAU,iBAFZ,6BASJ,wBAAOA,UAAU,yDAAjB,UACE,gCACE,qBAAIA,UAAU,2BAAd,UAzGa,CAAC,OAAQ,MAAO,OAAQ,QA0GrBmF,KAAI,SAAAC,GAAG,OACnB,oBAEEpF,UAAWgD,IACT,kBACA,CACE,mBAAkC,QAAdU,GACfb,IAAWuC,EAAIpB,cACpB,oBAAmC,SAAdN,GAChBb,IAAWuC,EAAIpB,cACpB,4BAA6BnB,IAAWuC,EAAIpB,gBAGhDqB,QAAS,kBAtFHC,EAsFoBF,EAAIpB,cArF1CT,EAAae,IAAI,SAAUgB,GAC3B/B,EAAae,IAAI,YAA2B,QAAdZ,EAAsB,MAAQ,QAE5DF,EAAS,IAAD,OAAKD,EAAaiB,YAAc,CAAEe,SAAS,SAEnDzB,EAAc0B,MAAK,SAACC,EAAMC,GACxB,OAAQJ,GACN,IAAK,OACL,IAAK,MACH,MACO,QADC5B,EAEGgC,EAAKJ,GAAOK,cAAcF,EAAKH,IAE/BG,EAAKH,GAAOK,cAAcD,EAAKJ,IAG5C,IAAK,OACL,IAAK,OACH,MACO,QADC5B,EAEGgC,EAAKJ,GAAUG,EAAKH,GAEpBG,EAAKH,GAAUI,EAAKJ,GAGjC,QACE,OAAO,MA3BI,IAACA,GA0ER,SAcGF,GAbIA,MAgBT,oBAAIpF,UAAU,MAAd,oBACA,oBAAIA,UAAU,MAAd,yBAIJ,gCACG8D,EAAcqB,KAAI,SAAAtD,GAAM,OACvB,oBAEE+D,GAAI/D,EAAOI,KACXjC,UAAWgD,IACT,SACA,CAAE,8BAA+BnB,EAAOI,OAASA,IALrD,SAQE,cAAC,EAAD,CACEJ,OAAQA,EACRa,OAAQA,EAAOb,GACfc,OAAQA,EAAOd,MAVZA,EAAOI,mBC7Jb4D,EAAuB,WAClC,IAAQ9E,EAAWuC,qBAAW1C,GAAtBG,OAER,OACE,qCACE,oBAAIf,UAAU,kCAAd,yBAECe,EAAO+E,OAAS,GACf,qBAAK9F,UAAU,WAAf,SACE,cAAC,EAAD,UCXG+F,EAAyB,kBACpC,mBAAG/F,UAAU,8CAAb,6BCCWgG,EAAmB,kBAC9B,qCACE,qBAAKhG,UAAU,oCAAoCiG,KAAK,aAAxD,SACE,sBAAKjG,UAAU,eAAf,UACE,cAAC,IAAD,CACEA,UAAW,gBAAGkG,EAAH,EAAGA,SAAH,OAAkBlD,IAC3B,wDACA,CAAE,YAAakD,KAEjB7D,GAAG,IALL,kBASA,cAAC,IAAD,CACErC,UAAW,gBAAGkG,EAAH,EAAGA,SAAH,OAAkBlD,IAC3B,wDACA,CAAE,YAAakD,KAEjB7D,GAAG,UALL,yBAYJ,sBAAMrC,UAAU,wCAAhB,SACE,cAAC,IAAD,MAGF,wBAAQA,UAAU,SAAlB,SACE,qBAAKA,UAAU,4BAAf,SACE,qD,sBC5BKmG,G,MAAsB,WACjC,MAA8B7C,qBAAW1C,GAAjCG,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UACVwC,EAAWC,cACjB,EAMI2C,YAAgB,CAClBC,KAAM,aANNC,EADF,EACEA,SACAC,EAFF,EAEEA,aAFF,IAGEC,UAAaC,EAHf,EAGeA,OAAQC,EAHvB,EAGuBA,QACrBC,EAJF,EAIEA,UACAC,EALF,EAKEA,MAKIC,EAASF,IACTG,GAAc,IAAIC,MAAOC,cAEzBC,EAAY,SAACC,GACjB,OAAOnG,EAAOgD,QAAO,SAAAlC,GAAM,OACzBA,EAAOU,MAAQ2E,GACZrF,EAAOoB,KAAO,IAAM4D,EAAO5D,MAC3BpB,EAAOoB,KAAO,IAAM4D,EAAO5D,MAC3BpB,EAAOqB,OAAS2D,EAAO5D,SAIxBkE,EAAa1F,mBACjB,kBAAMwF,EAAU,OAChB,CAACJ,EAAO5D,OAGJmE,EAAa3F,mBACjB,kBAAMwF,EAAU,OAChB,CAACJ,EAAO5D,OAoBV,OACE,sBAAKjD,UAAU,WAAf,UACE,oBAAIA,UAAU,kCAAd,8BAIA,uBACEqH,aAAa,MACbC,SAAUf,GArBC,SAACgB,GAChB,IAAMtF,EAAI,UAAMsF,EAAK/E,KAAKwB,cAAcwD,MAAM,KAAKC,KAAK,KAA9C,YAAsDF,EAAKtE,MAC/DyE,EAAS,2BACVH,GADU,IAEbtF,SAGFjB,EAAU,GAAD,mBAAKD,GAAL,CAAa2G,KAEtBlE,EAAS,WACToD,OASE,UAIE,qBAAK5G,UAAU,QAAf,SACE,sBAAKA,UAAU,yCAAf,UACE,+CACE8E,KAAK,QACDwB,EAAS,OAAQ,CACnBqB,UAAU,EACVC,UAAW,EACXC,UAAW,GACXC,QAAS,CACPnG,MAAO,uBACPoG,QAAS,sDARf,IAWEhD,YAAY,eACZ/E,UAAWgD,IACT,QACA,CACE,aAAc6D,EAAOrE,KACrB,mBAAaiE,QAAb,IAAaA,OAAb,EAAaA,EAAQjE,UAK3B,sBAAMxC,UAAU,wBAAhB,SACE,mBAAGA,UAAU,oBAGb,OAACyG,QAAD,IAACA,KAAQjE,OAAQqE,EAAOrE,MACxB,sBAAMxC,UAAU,yBAAhB,SACE,mBAAGA,UAAU,oBAIV,OAANyG,QAAM,IAANA,OAAA,EAAAA,EAAQjE,OACP,qCACE,sBAAMxC,UAAU,yBAAhB,SACE,mBAAGA,UAAU,kCAEf,mBAAGA,UAAU,iBAAb,sCAGA,mBAAGA,UAAU,iBAAb,gBACGyG,QADH,IACGA,OADH,EACGA,EAAQjE,KAAKuF,kBAOxB,qBAAK/H,UAAU,QAAf,SACE,sBAAKA,UAAU,UAAf,UACE,wBAAOgI,QAAQ,OAAOhI,UAAU,QAAhC,UACE,+CACE4F,GAAG,OACHd,KAAK,SACDwB,EAAS,MAAO,CAClBqB,SAAU,CACRhG,OAAO,EACPoG,QAAS,8BANf,IASEpG,MAAM,OAVV,cAcA,wBAAOqG,QAAQ,SAAShI,UAAU,QAAlC,UACE,+CACE4F,GAAG,SACHd,KAAK,SACDwB,EAAS,MAAO,CAClBqB,UAAU,KAJd,IAMEhG,MAAM,OAPV,gBAYgB,OAAfkF,EAAOtE,KACN,mBAAGvC,UAAU,iBAAb,0CAON,sBAAKA,UAAU,oDAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,+CACE8E,KAAK,UACDwB,EAAS,OAAQ,CACnBqB,UAAU,EACVM,IAAK,CACHtG,MAAO,KACPoG,QAAS,sCAEXG,IAAK,CACHvG,MAAOmF,EACPiB,QAAQ,gDAAD,OAAkDjB,IAE3DgB,QAAS,cAZb,IAcE/C,YAAY,oBACZkD,IAAI,OACJC,IAAKpB,EACL9G,UAAWgD,IACT,QACA,CACE,aAAc6D,EAAO5D,KACrB,mBAAawD,QAAb,IAAaA,OAAb,EAAaA,EAAQxD,WAKpB,OAANwD,QAAM,IAANA,OAAA,EAAAA,EAAQxD,OACP,qCACE,mBAAGjD,UAAU,iBAAb,2CAGA,mBAAGA,UAAU,iBAAb,gBACGyG,QADH,IACGA,OADH,EACGA,EAAQxD,KAAK8E,gBAMtB,sBAAK/H,UAAU,sBAAf,UACE,+CACE8E,KAAK,UACDwB,EAAS,OAAQ,CACnBqB,UAAU,EACVM,IAAK,CACHtG,MAAOkF,EAAO5D,KACd8E,QAAQ,6CAAD,OAA+ClB,EAAO5D,OAE/DiF,IAAK,CACHvG,OAAQkF,EAAO5D,KAAO,IACtB8E,QAAS,kCAEXD,QAAS,cAZb,IAcE/C,YAAY,oBACZkD,IAAKpB,EAAO5D,KACZiF,IAAKpB,EACL9G,UAAWgD,IACT,QACA,CACE,aAAc6D,EAAO3D,KACrB,mBAAauD,QAAb,IAAaA,OAAb,EAAaA,EAAQvD,OAGzBiF,UAAWtB,EAAO5D,SAGb,OAANwD,QAAM,IAANA,OAAA,EAAAA,EAAQvD,OACP,qCACE,mBAAGlD,UAAU,iBAAb,2CAGA,mBAAGA,UAAU,iBAAb,gBACGyG,QADH,IACGA,OADH,EACGA,EAAQvD,KAAK6E,mBAOxB,sBAAK/H,UAAU,oDAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,qBAAKA,UAAU,wBAAf,SACE,mDACMsG,EAAS,eADf,IAEEtG,UAAU,iBACVmI,UAAWtB,EAAO5D,KAHpB,UAKE,wBAAQtB,MAAM,GAAd,2BACCwF,EAAWhC,KAAI,SAAAT,GAAG,OACjB,wBAAuB/C,MAAO+C,EAAIlC,KAAlC,SACGkC,EAAIlC,MADMkC,EAAIzC,iBAQzB,qBAAKjC,UAAU,wBAAf,SACE,qBAAKA,UAAU,wBAAf,SACE,mDACMsG,EAAS,eADf,IAEEtG,UAAU,iBACVmI,UAAWtB,EAAO5D,KAHpB,UAKE,wBAAQtB,MAAM,GAAd,2BACCyF,EAAWjC,KAAI,SAAAR,GAAG,OACjB,wBAAuBhD,MAAOgD,EAAInC,KAAlC,SACGmC,EAAInC,MADMmC,EAAI1C,oBAS3B,sBAAKjC,UAAU,6CAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE8E,KAAK,SACL9E,UAAU,iBACVmI,UAAWzB,EAHb,sBAQF,qBAAK1G,UAAU,UAAf,SACE,wBACE8E,KAAK,SACL9E,UAAU,0BACVqF,QAnPK,WACf7B,GAAU,IA+OF,iCC7PG4E,G,kBAlBO,WACpB,OACE,cAAC,EAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAU/C,SAAO,EAAClD,GAAG,QACjD,cAAC,IAAD,CAAOgG,KAAK,SAASC,QAAS,cAAC,EAAD,IAA9B,SACE,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,EAAD,QAE/B,cAAC,IAAD,CAAOD,KAAK,aAAaC,QAAS,cAAC,EAAD,MAClC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,eClBnCE,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e0d7e1ac.chunk.js","sourcesContent":["import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h2 className=\"subtitle is-3 has-text-centered\">Home page</h2>\n);\n","import { request, API_URL } from './api';\n\nexport const getPeople = () => {\n  return request(API_URL);\n};\n","// eslint-disable-next-line max-len\nexport const API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const request = (url: string) => {\n  return fetch(`${url}`)\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject(\n          new Error(`${response.status} - ${response.statusText}`),\n        );\n      }\n\n      return response.json();\n    });\n};\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { getPeople } from '../api/people';\n\ntype Context = {\n  people: People[],\n  setPeople: (people: People[]) => void,\n};\n\nexport const PeopleContext = React.createContext<Context>({\n  people: [],\n  setPeople: () => {},\n});\n\nexport const PeopleProvider: React.FC = ({ children }) => {\n  const [people, setPeople] = useState<People[]>([]);\n\n  const loadPeople = async () => {\n    const peoples = await getPeople();\n\n    setPeople(peoples);\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  const contextValue = useMemo(() => {\n    return {\n      people,\n      setPeople,\n    };\n  }, [people]);\n\n  return (\n    <PeopleContext.Provider value={contextValue}>\n      {children}\n    </PeopleContext.Provider>\n  );\n};\n","import ScrollIntoView from 'react-scroll-into-view';\nimport { Link, useLocation } from 'react-router-dom';\n\ntype Props = {\n  person: People,\n};\n\nexport const PersonName: React.FC<Props> = ({ person }) => {\n  const { search } = useLocation();\n\n  return (\n    <ScrollIntoView\n      selector={`#${person.slug}`}\n      smooth\n      scrollOptions={{\n        block: 'center',\n      }}\n    >\n      <Link\n        to={{\n          pathname: `/people/${person.slug}`,\n          search,\n        }}\n        className={person.sex === 'm' ? 'has-text-link' : 'has-text-danger'}\n      >\n        {person.name}\n      </Link>\n    </ScrollIntoView>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useSearchParams, useParams } from 'react-router-dom';\nimport { PersonName } from './PersonName';\n// import { PeopleContext } from '../../hoc/PeopleProvider';\n\ntype Props = {\n  person: People,\n  mother: People | null,\n  father: People | null,\n};\n\nexport const PersonRow: React.FC<Props> = ({ person, mother, father }) => {\n  // const { people } = useContext(PeopleContext);\n  const [searchParams] = useSearchParams();\n  const sortBy = searchParams.get('sortBy') || '';\n\n  const { slug } = useParams<{ slug: string }>();\n\n  // const mother = people.find(mam => mam.name === person.motherName);\n  // const father = people.find(dad => dad.name === person.fatherName);\n\n  return (\n    <>\n      <td\n        className={classNames({\n          'has-background-link-light': sortBy === 'name',\n          'has-background-grey-lighter': person.slug === slug,\n        })}\n      >\n        <PersonName person={person} />\n      </td>\n      <td\n        className={classNames({\n          'has-background-link-light': sortBy === 'sex',\n          'has-background-grey-lighter': person.slug === slug,\n        })}\n      >\n        {person.sex === 'f' ? 'Female' : 'Male'}\n      </td>\n      <td\n        className={classNames({\n          'has-background-link-light': sortBy === 'born',\n          'has-background-grey-lighter': person.slug === slug,\n        })}\n      >\n        {person.born}\n      </td>\n      <td\n        className={classNames({\n          'has-background-link-light': sortBy === 'died',\n          'has-background-grey-lighter': person.slug === slug,\n        })}\n      >\n        {person.died}\n      </td>\n      <td>\n        {mother\n          ? (\n            <PersonName person={mother} />\n          )\n          : (\n            person.motherName\n            || <p className=\"is-italic\">unknown</p>\n          )}\n      </td>\n      <td>\n        {father\n          ? (\n            <PersonName person={father} />\n          )\n          : (\n            person.fatherName\n            || <p className=\"is-italic\">unknown</p>\n          )}\n      </td>\n    </>\n  );\n};\n","import React, {\n  useCallback,\n  useMemo,\n  useState,\n  useContext,\n} from 'react';\nimport classNames from 'classnames';\nimport debounce from 'lodash/debounce';\nimport {\n  useParams,\n  useSearchParams,\n  useNavigate,\n  Link,\n} from 'react-router-dom';\nimport { PeopleContext } from '../../hoc/PeopleProvider';\nimport { PersonRow } from './PersonRow';\nimport './PeopleTable.scss';\n\nexport const PeopleTable: React.FC = () => {\n  const { people } = useContext(PeopleContext);\n  const { slug } = useParams<{ slug: string }>();\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n\n  const sortBy = searchParams.get('sortBy') || '';\n  const sortOrder = searchParams.get('sortOrder') || '';\n  const appliedQuery = searchParams.get('query') || '';\n\n  const [query, setQuery] = useState(appliedQuery);\n  const sorteringCol = ['Name', 'Sex', 'Born', 'Died'];\n\n  const getVisible = () => {\n    return people\n      ? people.filter(person => person.name.toLowerCase().includes(appliedQuery)\n        || person.motherName?.toLowerCase().includes(appliedQuery)\n        || person.fatherName?.toLowerCase().includes(appliedQuery))\n      : [];\n  };\n\n  const visiblePeople = useMemo(\n    getVisible,\n    [people, appliedQuery],\n  );\n\n  const applyQuery = useCallback(\n    debounce((newQuery: string) => {\n      if (newQuery) {\n        searchParams.set('query', newQuery.toLowerCase());\n      } else {\n        searchParams.delete('query');\n      }\n\n      navigate(`?${searchParams.toString()}`);\n    }, 500),\n    [],\n  );\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    applyQuery(event.target.value);\n  };\n\n  const handleSort = (param: string) => {\n    searchParams.set('sortBy', param);\n    searchParams.set('sortOrder', sortOrder !== 'asc' ? 'asc' : 'desc');\n\n    navigate(`?${searchParams.toString()}`, { replace: true });\n\n    visiblePeople.sort((fPer, sPer) => {\n      switch (param) {\n        case 'name':\n        case 'sex':\n          switch (sortOrder) {\n            case 'asc':\n              return sPer[param].localeCompare(fPer[param]);\n            default:\n              return fPer[param].localeCompare(sPer[param]);\n          }\n\n        case 'born':\n        case 'died':\n          switch (sortOrder) {\n            case 'asc':\n              return sPer[param] - (fPer[param]);\n            default:\n              return fPer[param] - (sPer[param]);\n          }\n\n        default:\n          return 0;\n      }\n    });\n  };\n\n  const mother = (person: People) => {\n    return visiblePeople.find(mam => mam.name === person.motherName) || null;\n  };\n\n  const father = (person: People) => {\n    return visiblePeople.find(dad => dad.name === person.fatherName) || null;\n  };\n\n  return (\n    <>\n      <div className=\"field is-grouped is-justify-content-space-between\">\n        <p\n          className=\"control has-icons-left\"\n          style={{ width: '50%' }}\n        >\n          <input\n            type=\"search\"\n            value={query}\n            placeholder=\"Person I'm looking for\"\n            className=\"input\"\n            onChange={handleQueryChange}\n            style={{ width: '100%' }}\n          />\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-search\" />\n          </span>\n        </p>\n\n        <div className=\"buttons\">\n          <Link\n            to=\"/people/new\"\n            className=\"button is-link\"\n          >\n            Add Person\n          </Link>\n        </div>\n      </div>\n\n      <table className=\"table is-hoverable is-striped is-fullwidth PeopleTable\">\n        <thead>\n          <tr className=\"has-background-white-ter\">\n            {sorteringCol.map(col => (\n              <th\n                key={col}\n                className={classNames(\n                  'table__sort p-1',\n                  {\n                    'table__sort--asc': sortOrder === 'asc'\n                      && sortBy === col.toLowerCase(),\n                    'table__sort--desc': sortOrder === 'desc'\n                      && sortBy === col.toLowerCase(),\n                    'has-background-link-light': sortBy === col.toLowerCase(),\n                  },\n                )}\n                onClick={() => handleSort(col.toLowerCase())}\n              >\n                {col}\n              </th>\n            ))}\n            <th className=\"p-1\">Mother</th>\n            <th className=\"p-1\">Father</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {visiblePeople.map(person => (\n            <tr\n              key={person.slug}\n              id={person.slug}\n              className={classNames(\n                'Person',\n                { 'has-background-grey-lighter': person.slug === slug },\n              )}\n            >\n              <PersonRow\n                person={person}\n                mother={mother(person)}\n                father={father(person)}\n              />\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React, { useContext } from 'react';\nimport { PeopleContext } from '../../hoc/PeopleProvider';\nimport { PeopleTable } from './PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const { people } = useContext(PeopleContext);\n\n  return (\n    <>\n      <h2 className=\"subtitle is-3 has-text-centered\">People page</h2>\n\n      {people.length > 0 && (\n        <div className=\"box px-2\">\n          <PeopleTable />\n        </div>\n      )}\n    </>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <p className=\"has-text-centered has-text-danger is-size-2\">Page not found</p>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { NavLink, Outlet } from 'react-router-dom';\n\nexport const Layout: React.FC = () => (\n  <>\n    <nav className=\"navbar is-fixed-top is-light ml-4\" role=\"navigation\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={({ isActive }) => classNames(\n            'navbar-item is-tab has-text-weight-semibold is-size-5',\n            { 'is-active': isActive },\n          )}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n        <NavLink\n          className={({ isActive }) => classNames(\n            'navbar-item is-tab has-text-weight-semibold is-size-5',\n            { 'is-active': isActive },\n          )}\n          to=\"/people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </nav>\n\n    <main className=\"container is-max-widescreen mt-6 px-4\">\n      <Outlet />\n    </main>\n\n    <footer className=\"footer\">\n      <div className=\"content has-text-centered\">\n        <p>\n          Created 2022\n        </p>\n      </div>\n    </footer>\n  </>\n);\n","import React, { useContext, useMemo } from 'react';\nimport classNames from 'classnames';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { PeopleContext } from '../../hoc/PeopleProvider';\nimport './NewPerson.scss';\n\nexport const NewPerson: React.FC = () => {\n  const { people, setPeople } = useContext(PeopleContext);\n  const navigate = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isValid },\n    getValues,\n    reset,\n  } = useForm<People>({\n    mode: 'onChange',\n  });\n\n  const values = getValues();\n  const currentYear = new Date().getFullYear();\n\n  const getParent = (gender: string) => {\n    return people.filter(person => (\n      person.sex === gender\n      && person.born + 15 < +values.born\n      && person.born + 65 < +values.born\n      && person.died >= +values.born\n    ));\n  };\n\n  const posibleMam = useMemo(\n    () => getParent('f'),\n    [values.born],\n  );\n\n  const posibleDad = useMemo(\n    () => getParent('m'),\n    [values.born],\n  );\n\n  const onCancel = () => {\n    navigate(-1);\n  };\n\n  const onSubmit = (data: People) => {\n    const slug = `${data.name.toLowerCase().split(' ').join('-')}-${data.born}`;\n    const newPerson = {\n      ...data,\n      slug,\n    };\n\n    setPeople([...people, newPerson]);\n\n    navigate('/people');\n    reset();\n  };\n\n  return (\n    <div className=\"box px-2\">\n      <h2 className=\"subtitle is-3 has-text-centered\">\n        Add a new person\n      </h2>\n\n      <form\n        autoComplete=\"off\"\n        onSubmit={handleSubmit(onSubmit)}\n      >\n        <div className=\"field\">\n          <div className=\"control has-icons-left has-icons-right\">\n            <input\n              type=\"text\"\n              {...register('name', {\n                required: true,\n                minLength: 3,\n                maxLength: 50,\n                pattern: {\n                  value: /^[A-Za-z][A-Za-z ]*$/,\n                  message: '*Name should contain only letters and no less 3',\n                },\n              })}\n              placeholder=\"Enter a Name\"\n              className={classNames(\n                'input',\n                {\n                  'is-success': values.name,\n                  'is-danger': errors?.name,\n                },\n              )}\n            />\n\n            <span className=\"icon is-small is-left\">\n              <i className=\"fas fa-user\" />\n            </span>\n\n            {(!errors?.name && values.name) && (\n              <span className=\"icon is-small is-right\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n\n            {errors?.name && (\n              <>\n                <span className=\"icon is-small is-right\">\n                  <i className=\"fas fa-exclamation-triangle\" />\n                </span>\n                <p className=\"help is-danger\">\n                  Please enter valid name.\n                </p>\n                <p className=\"help is-danger\">\n                  {errors?.name.message}\n                </p>\n              </>\n            )}\n          </div>\n        </div>\n\n        <div className=\"field\">\n          <div className=\"control\">\n            <label htmlFor=\"male\" className=\"radio\">\n              <input\n                id=\"male\"\n                type=\"radio\"\n                {...register('sex', {\n                  required: {\n                    value: true,\n                    message: '*Please choose a gender',\n                  },\n                })}\n                value=\"m\"\n              />\n              &nbsp;Male\n            </label>\n            <label htmlFor=\"female\" className=\"radio\">\n              <input\n                id=\"female\"\n                type=\"radio\"\n                {...register('sex', {\n                  required: true,\n                })}\n                value=\"f\"\n              />\n              &nbsp;Female\n            </label>\n\n            {values.sex === null && (\n              <p className=\"help is-danger\">\n                *Please choose a gender\n              </p>\n            )}\n          </div>\n        </div>\n\n        <div className=\"field is-grouped is-justify-content-space-between\">\n          <div className=\"control field__year\">\n            <input\n              type=\"number\"\n              {...register('born', {\n                required: true,\n                min: {\n                  value: 1400,\n                  message: '*Born date can\\'t be less then 1400',\n                },\n                max: {\n                  value: currentYear,\n                  message: `*Born date can't be more then current year - ${currentYear}`,\n                },\n                pattern: /^[0-9]*$/,\n              })}\n              placeholder=\"Enter a Born Year\"\n              min=\"1400\"\n              max={currentYear}\n              className={classNames(\n                'input',\n                {\n                  'is-success': values.born,\n                  'is-danger': errors?.born,\n                },\n              )}\n            />\n\n            {errors?.born && (\n              <>\n                <p className=\"help is-danger\">\n                  Please enter valid born year.\n                </p>\n                <p className=\"help is-danger\">\n                  {errors?.born.message}\n                </p>\n              </>\n            )}\n          </div>\n\n          <div className=\"control field__year\">\n            <input\n              type=\"number\"\n              {...register('died', {\n                required: true,\n                min: {\n                  value: values.born,\n                  message: `*Died date can't be less then born date - ${values.born}`,\n                },\n                max: {\n                  value: +values.born + 150,\n                  message: '*Age couldn\\'t be more than 150',\n                },\n                pattern: /^[0-9]*$/,\n              })}\n              placeholder=\"Enter a Died Year\"\n              min={values.born}\n              max={currentYear}\n              className={classNames(\n                'input',\n                {\n                  'is-success': values.died,\n                  'is-danger': errors?.died,\n                },\n              )}\n              disabled={!values.born}\n            />\n\n            {errors?.died && (\n              <>\n                <p className=\"help is-danger\">\n                  Please enter valid died year.\n                </p>\n                <p className=\"help is-danger\">\n                  {errors?.died.message}\n                </p>\n              </>\n            )}\n          </div>\n        </div>\n\n        <div className=\"field is-grouped is-justify-content-space-between\">\n          <div className=\"control field__select\">\n            <div className=\"select select__sizing\">\n              <select\n                {...register('motherName')}\n                className=\"select__sizing\"\n                disabled={!values.born}\n              >\n                <option value=\"\">Select mother</option>\n                {posibleMam.map(mam => (\n                  <option key={mam.slug} value={mam.name}>\n                    {mam.name}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n\n          <div className=\"control field__select\">\n            <div className=\"select select__sizing\">\n              <select\n                {...register('fatherName')}\n                className=\"select__sizing\"\n                disabled={!values.born}\n              >\n                <option value=\"\">Select father</option>\n                {posibleDad.map(dad => (\n                  <option key={dad.slug} value={dad.name}>\n                    {dad.name}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"field is-grouped is-justify-content-center\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-link\"\n              disabled={!isValid}\n            >\n              Submit\n            </button>\n          </div>\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-link is-light\"\n              onClick={onCancel}\n            >\n              Cancel\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n","import { Routes, Route, Navigate } from 'react-router-dom';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePages/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\nimport { Layout } from './components/Layout/Layout';\nimport { NewPerson } from './components/PeoplePages/NewPerson';\nimport { PeopleProvider } from './hoc/PeopleProvider';\nimport './App.scss';\nimport 'bulma';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nconst App: React.FC = () => {\n  return (\n    <PeopleProvider>\n      <Routes>\n        <Route path=\"/\" element={<Layout />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate replace to=\"/\" />} />\n          <Route path=\"people\" element={<PeoplePage />}>\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"people/new\" element={<NewPerson />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </PeopleProvider>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}